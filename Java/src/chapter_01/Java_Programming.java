package chapter_01;

public class Java_Programming {

	public static void main(String[] args) {
		// 01. 자바 프로그래밍 시작하기
		
		/*	프로그래밍이란 무엇일까?
		 * -> 컴퓨터 프로그램 만드는 일을 프로그래밍(programming)이라 하고,
		 * 프로그램 만드는 사람을 프로그래머(programmer)라고 한다.
		 * 프로그래밍을 한다는 것은 컴퓨터가 일을 하도록 컴퓨터 언어로 명령을
		 * 만들고 컴퓨터로 하여금 그 명령을 실행하게 하는 것을 말합니다.
		 */
		
		/*	[ 자바의 장점 ]
		 * 	1. 운영체제에서 독립적이다.
		 * - JVM에서 동작하기 때문에, 특정 운영체제에 종속되지 않는다.
		 * (JVM이란? Java Virtual Machine, 자바 가상 머신의 약자를 따서 줄여 부르는 용어
		 * JVM의 역할은 자바 애플리케이션을 클래스 로더를 통해 읽어 들여 자바 API와 함께 실행하는 것)
		 * 	2. 객체지향 언어이기 때문에 유지보수가 쉽고 확장성이 좋다.
		 * - 객체 지향 프로그래밍이란 일의 순서대로 프로그래밍하는 것이 아닌 
		 * 	여러 객체의 협력을 통해 프로그래을 구현하는 것, 객체 지향 언어로 프로그래밍하면 공통으로
		 *	사용하는 부분을 수정하지 않고도 프로그램에 새 기능을 쉽게 추가할 수 있다.
		 *	3. 오픈소스이다.
		 *- 오픈소스 라이브러리가 풍부하며 잘 활용한다면 짧은 개발 시간 내에 안정적인 애플리케이션 쉽게 구현
		 *	4. 자동으로 메모리 관리를 해준다,
		 *- JVM에서 Garbage Collecotr라고 불리는 데몬 쓰레드에 의해 CG(Garbage Collection)가 일어난다.
		 *	GC로 인해 별도의 메모리 관리가 필요 없으며 비지니스 로직에 집중할 수 있다.
		 *	5. 동적 로딩(Dynamic Loading)을 지원한다.
		 *- 애플리케이션이 실행될 때 모든 객체가 생성되지 않고, 각 객체가 필요한 시점에 클래스를 동적로딩해서 생성
		 */
		
		/*	[ 자바의 단점 ]
		 * 	1. 비교적 속도가 느리다.
		 * - 자바는 한 번의 컴파일링으로 실행 가능한 기계어가 만들어지지 않고 JVM에 의해 기계어로 번역되고
		 * 실행하는 과정을 거치기 때문에 C나 C++의 컴파일 단계에서 만들어지는 완전한 기계어보다 속도 느림
		 * 	2. 예외처리가 불편하다.
		 * - 프로그래머 검사가 필요한 예외가 등장한다면 무조건 프로그래머거 선언을 해줘야 한다.
		 */
		
		// Hello, Java 문장 출력하기
		System.out.println("Hello,Java");
		
		// 연습문제 ) 이클립스에서 이름 출력해보기
		System.out.println("김혜진");
		
		/*	[ 주석 ]
		 * : 프로그램 실행과 관계없는 문장으로 주로 프로그램 코드에 대한 설명 등을
		 * 작성하거나 기존의 코드를 실행 대상에서 제외시키는 옹도로 사용
		 * 
		 * 1. 한 줄 주석(라인 주석) :  ' // 주석 처리할 문장 '
		 * - 주석 처리하고자 하는 문장의 앞쪽에 '//'기호를 사용하여 주석처리
		 * - 해당 주석 표시 뒤의 한 문장을 실행 대상에서 제외시킴
		 * - 범위 주석 대신 사용 가능하며 특정 범위의 문장들을 블록 지정한 뒤 주석 처리시 각각 주석 처리
		 * - 해제 시에도 특정 범위 블록 지정 후 해체
		 * => 단축키 : 주석 처리할 문장의 라인 이후 위치에서
		 * 	1) Ctrl + Shift + C
		 * 	2) Ctrl + /
		 * => 해제 단축키 : 주석 설정 단축키와 동일
		 * 
		 * 2. 여러줄 주석(범위 주석) : ' /* 주석 처리할 문 '
		 * - 주석 처리하고자 하는 범위의 문장 앞 뒤에 주석 기호를 둘러쌈
		 * - 한 줄 또는 여러줄에 걸친 주석 처리가 가능하며 주로 긴 문장의 설명을 작성하거나,
		 * 여러 줄의 코드를 주석 처리하는 용도로 사용
		 * => 단축키 : Ctrl + Shift + /
		 * => 해제 단축키 : Ctrl + Shift + \
		 * 
		 * 3. JavaDoc 주석 : /** 주석 처리할 문장*/
		 /* - 일반적인 주석 처리 용도로는 사용하지 않고 자바 클래서 설명서를 작성하는 용도의 주석
		 */

	}

}
